#!/bin/bash

cd "$(dirname "$0")"

HELP="Arguments must be:\n\n   Information parameters:
\t-help        : This information

   Commands:
\t-clear       : Clear package
\t-ssm         : Build SSM package
\t-build       : Compile package
\t-test        : Run tests
\t-reconf      : Reconfigure package
\t-verbose     : Enable verbose on build step\n"

CLR=0
BLD=0
SSM=0
REC=0
TEST=0
unset VER

#----- Get arguments
while [ $# -gt 0 ]; do
    case "$1" in
        -clear)   CLR=1;;
        -reconf)  REC=1;;
        -build)   BLD=1;;
        -test)    TEST=1;;
        -ssm)     SSM=1;;
        -verbose) VER=1;;

        -h|-help)    printf -- "$HELP\n"; exit 0;;
        --)          shift; break;;
        *)           printf -- "Invalid argument $1.\n\n$HELP"; exit 1;;
    esac
    shift
done

#----- Parse VERSION file
while IFS= read -r line; do
   if [[ `expr index "$line" ":"` -ne 0 ]]; then
      var=$(echo ${line%%:*} | xargs)
      val=$(echo ${line#*:} | xargs)
      eval $var=\""$val"\"
   else
      tokens=( $line )
      eval ${tokens[0]}=${tokens[2]}  
   fi
done < MANIFEST

#----- Load dependencies if not done
if [[ -n $EC_ARCH ]]; then
   `type pgsm &>/dev/null` || {
      . r.load.dot \
         main/opt/cmake/cmake-3.16.4 \
         rpn/libs/${RMN} \
         rpn/utils/${RMN} \
         rpn/vgrid/${VGRID}
   }
fi

#----- SSM packaging stuff
if [[ -n $COMP_ARCH ]]; then
   SSM_COMP=-${COMP_ARCH}
fi
ORDENV_PLAT=${ORDENV_PLAT:-`uname -s`-`uname -m`}
   
SSM_VERSION=${VERSION}${SSM_COMP}
SSM_NAME=${NAME}_${SSM_VERSION}_${ORDENV_PLAT}

case `domainname -d` in
   *science.gc.ca)
      export LIBGEOREF_DATA=/space/hall3/sitestore/eccc/cmd/s/nil000/Projects/libgeoref/GRIDS
      ;;
   *ec.gc.ca)
      export LIBGEOREF_DATA=/local/drive1/afsr005/GRIDS
      ;;
   *)
      export LIBGEOREF_DATA=EXT_HOME=NIL
      echo "(WARNING) Not running on GC network, test data will not be available"
      ;;
esac

if [[ $CLR -eq 1 ]]; then
   rm -f -r build "${SSM_DEV}/workspace/${SSM_NAME}"
fi

if [[ $REC -eq 1 ]]; then
   rm -f -r build/$ARCH
fi

if [[ $BLD -eq 1 ]]; then
   export EC_CMAKE_MODULE_PATH="`pwd`/cmake;$EC_CMAKE_MODULE_PATH"
   export DESTDIR=${SSM_DEV}/workspace/${SSM_NAME}
   type gdal-config >/dev/null 2>&1 && CMAKE_COMP_FLAGS="$CMAKE_COMP_FLAGS -DGDAL_ROOT=`gdal-config --prefix`" 2>/dev/null

   src=`pwd`
   mkdir -p build/$ARCH
   cd build/$ARCH
   
   #----- Build
   if [[ $REC -eq 1 ]]; then
      cmake $CMAKE_COMP_FLAGS -DCMAKE_INSTALL_PREFIX=$DESTDIR -DVERSION=${VERSION} ${src}
   fi && make -j VERBOSE=${VER} && make doc
 
   cd ..
fi

if [[ $TEST -eq 1 ]]; then
   cd build/$ARCH
   make test || exit 1
   cd ..
fi

if [[ $SSM -eq 1 ]]; then

   cd build/$ARCH
   make install || exit 1

   printf -- "\n----- Building ssm package : ${SSM_DEV}/workspace/${SSM_NAME} -----\n"

   rm -f ${SSM_DEV}/package/${SSM_NAME}.ssm 
   mkdir -p ${SSM_DEV}/workspace/${SSM_NAME}/.ssm.d  ${SSM_DEV}/workspace/${SSM_NAME}/etc/profile.d
   ln -fs Dict ${SSM_DEV}/workspace/${SSM_NAME}/bin/o.dict
   cp .ssm.d/post-install ${SSM_DEV}/workspace/${SSM_NAME}/.ssm.d

   echo "{
   \"name\": \"${NAME}\",
   \"version\": \"${VERSION}\",
   \"platform\": \"${ORDENV_PLAT}\",
   \"maintainer\": \"${MAINTAINER}\",
   \"summary\": \"${SUMMARY}\",
   \"description\": \"${DESCRIPTION}\",
   \"requires\": \"\",
   \"x-buildinfo\": \"`[ -z "\${ORDENV_SETUP}" ] || git describe --always`\"
}" > ${SSM_DEV}/workspace/${SSM_NAME}/.ssm.d/control.json

   cd ${SSM_DEV}/workspace; tar --exclude=.nfs* -zcvf ${SSM_DEV}/package/${SSM_NAME}.ssm ${SSM_NAME}
#   rm -f -r  $(SSM_DEV)/workspace/$(SSM_NAME)
fi
